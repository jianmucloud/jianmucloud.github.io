<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>概要设计-可观测</title>
    <link href="/2022/12/05/%E6%A6%82%E8%A6%81%E8%AE%BE%E8%AE%A1-%E5%8F%AF%E8%A7%82%E6%B5%8B/"/>
    <url>/2022/12/05/%E6%A6%82%E8%A6%81%E8%AE%BE%E8%AE%A1-%E5%8F%AF%E8%A7%82%E6%B5%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="服务网络可观测特性概要设计文档V2"><a href="#服务网络可观测特性概要设计文档V2" class="headerlink" title="服务网络可观测特性概要设计文档V2"></a>服务网络可观测特性概要设计文档V2</h1><h2 id="1-需求背景"><a href="#1-需求背景" class="headerlink" title="1.  需求背景"></a>1.  需求背景</h2><blockquote><p>讲清楚为什么要做这个需求（不要写因为老师安排你做了这个需求所以你做这个需求，而是结合你的调研情况，讲清楚在什么样的产业需求情况下，引发了老师安排你做或者你主动规划做这个需求）</p></blockquote><h3 id="1-1-面向服务消费者"><a href="#1-1-面向服务消费者" class="headerlink" title="1.1 面向服务消费者"></a>1.1 面向服务消费者</h3><p>目前网络上的服务规模极其庞大，且具有海量交互、泛在分布、动态复杂等特点。服务消费者需要去网络上发现服务、使用服务、观测服务运行状态来完成自己的业务。然而服务与服务之间存在着壁垒，给服务的发现、使用、观测等都带来了困难。服务网络希望让服务消费者使用服务的过程尽可能的简单，能够很容易学习上手甚至开箱即用，而可观测特性在其中扮演了重要作用。</p><p>传统的可观测系统：</p><ul><li>需要在部署服务时就预先准备好用于观测的探针，有的探针实现起来可能较麻烦</li><li>功能相对分散，若要构建一个较全的可观测系统，需要使用多种可观测工具分别负责不同的观测功能</li><li>无法适应越来越复杂的微服务架构和分布式架构</li></ul><p>依托服务网络的可观测系统：</p><ul><li>服务网络要求接入的服务预先设计好对应接口，即服务发布者发布服务时就需要提供可观测性接口，方便服务消费者观测使用的服务</li><li>针对服务网络产生的异构数据，进行动态感知，建立多模态数据监控系统，实现监控指标、日志、调用链等多维异构数据的实时自动获取</li><li>服务网络中服务的关系无时不刻不在变化、演化，可观测系统可以快速识别变化并及时更新服务状态</li></ul><h3 id="1-2-面向服务发布者"><a href="#1-2-面向服务发布者" class="headerlink" title="1.2 面向服务发布者"></a>1.2 面向服务发布者</h3><p>以往服务发布者如企业等角色，需要向公有云去购买服务器实例、集群等资源，亦或自己直接购买服务器，企业的运维人员配置完集群后还要配置网络环境。一切就绪后才能部署应用，带来了极高的门槛。如果服务发布者需要同时使用多个公有云或同时使用公有云和私有服务器，则会更加复杂。</p><p>服务网络类似一个巨大的公有云，在大规模发布、管理服务上具有优势，其中服务网络可观测特性为大规模管理提供了基础。服务网络的管理运维不需要服务发布者参与，服务发布者只需要关注自己的服务。服务网络可观测特性为服务发布者提供：</p><ul><li>实时观测自己提供服务的使用量、网络流量、服务计量、计费信息等</li><li>可观测系统会根据观测到的服务状态信息给出扩缩容建议</li><li>可观测系统可以在服务发生异常时提供日志、调用链等信息辅助服务发布者修复异常</li></ul><p>当然服务发布者也可以不购买使用服务网络提供的云服务器，使用自己的私有服务器或者在其他公有云上部署服务，只要服务符合服务网络定义的规范，就可以接入服务网络，提供给服务消费者。</p><h3 id="1-3-面向平台管理员"><a href="#1-3-面向平台管理员" class="headerlink" title="1.3 面向平台管理员"></a>1.3 面向平台管理员</h3><p>服务网络运行在一个大规模集群的基础上，集群的管理运维由平台管理员完成。大规模集群的运维对服务网络平台的管理员是一件较困难的工作。主要困难体现在：</p><ul><li>大规模集群的控制面apiserver和存储etcd集群无法保证高可用，可能无法及时响应</li><li>大规模集群的调度sheduler调度效率较低</li><li>大规模集群发生异常可能涉及服务众多，牵扯面极大</li></ul><p>所以服务网络可观测特性需要通过采集记录大规模集群运行时的指标和日志，运用数据挖掘和机器学习的方法帮助平台管理员提前预测可能发生的异常，并实现自动告警。当异常已经发生时，服务网络可观测特性是帮助平台管理员进行临时人工调度和找到异常、修复异常的最重要依据。</p><h2 id="2-需求价值"><a href="#2-需求价值" class="headerlink" title="2.需求价值"></a>2.需求价值</h2><blockquote><p>讲清楚这个需求做了之后，前面的需求背景中提到的当前业界面临的哪些痛点问题就可以解决掉了。</p></blockquote><p>相比于传统的服务集成，服务网络呈现跨网跨域场景、服务节点海量多元异构、逻辑结构交互复杂、网络规模尺度各异、主体间可信关系薄弱、网络时变演化等特点，给研究带来极大挑战。服务网络可观测特性来源于云原生可观测性，在云原生现有可观测能力上对服务网络的特性进行适配。可观测性一词来源于控制理论，是指系统可以由其外部输出判断其内部状态的程度。可观测性的基石指标、日志、链路数据能够帮助我们更好的理解运行的系统，为事前预防、事中处理、事后复盘提供了重要决策依据。</p><h3 id="2-1-服务消费者：自动化、可自定义监控"><a href="#2-1-服务消费者：自动化、可自定义监控" class="headerlink" title="2.1 服务消费者：自动化、可自定义监控"></a>2.1 服务消费者：自动化、可自定义监控</h3><p>相比传统的监控系统，使用服务网络，服务消费者不需要再去自己部署探针、学习多种监控工具的使用，只需要学习服务网络对可观测插件规定的接口即可。服务发布者会按照要求提供监控接口，服务消费者调用对应接口即可，服务网络平台为用户提供一些封装好的可以满足对服务基本方面观测的指标。同时大量的原始监控指标也提供给服务消费者，服务消费者可以选择其中一些构成自定义的指标。服务网络可观测特性可以满足服务网络消费者全方位实时监控自己使用的服务的需求，保证可以快速发现服务不可用、服务失败。</p><h3 id="2-2-服务发布者：全方位监控、服务部署监控一体化"><a href="#2-2-服务发布者：全方位监控、服务部署监控一体化" class="headerlink" title="2.2 服务发布者：全方位监控、服务部署监控一体化"></a>2.2 服务发布者：全方位监控、服务部署监控一体化</h3><p>服务网络为服务提供者提供其服务的监控功能，这让服务提供者只需要关注自己服务的业务流程，可观测方面只要按服务网络的接口规范提供接口即可。服务网络负责通过监控接口接管服务的监控，一方面可以让服务提供者监控自己的服务，另一方面可以把网络中的服务监控接口整合让平台管理员了解整个网络上服务的状态。</p><h3 id="2-3-平台管理员：全方位智能化运维"><a href="#2-3-平台管理员：全方位智能化运维" class="headerlink" title="2.3 平台管理员：全方位智能化运维"></a>2.3 平台管理员：全方位智能化运维</h3><p>服务网络可观测特性可以保证服务网络运维人员对整个网络状态的了解，包括服务网络上的各种服务和服务器的状态，对网络上存在的服务故障进行检测，对网络上的异常流量异常调用进行追踪，对存在的安全隐患进行预警。特别是对于大规模跨网跨域场景，网络环境复杂,问题排查难度大，可观测特性可以辅助网络运维人员进行故障排查和决策。</p><h2 id="3-需求功能描述"><a href="#3-需求功能描述" class="headerlink" title="3.需求功能描述"></a>3.需求功能描述</h2><blockquote><p>讲清楚你的这个需求，做完之后，具体实现了那几条功能，注意这个和第二点需求价值的区别，需求价值是讲你通过这个需求实现，解决了哪些痛点问题，而需求功能描述是指具体到软件工程语言的，你所实现的基本功能条目，言简意赅、精准描述。</p></blockquote><p>当前云原生可观测性能力有三大支柱：日志事件（Logging），分布式链路追踪（Tracing）以及指标监控（Metrics）。指标，是一段时间内记录的各个维度的量化信息，用来观察系统的某些状态和趋势；日志，是对程序运行过程中产生的一些离散事件的记录；链路追踪，是对一次请求从接收到处理完毕整个生命周期内的调用链路的记录。服务网络可观测特性主要实现的功能包括服务数据采集与可视化功能、预警提醒功能、故障检测与分析功能。</p><h3 id="3-1-数据采集功能"><a href="#3-1-数据采集功能" class="headerlink" title="3.1 数据采集功能"></a>3.1 数据采集功能</h3><p>数据采集包括服务数据采集和集群数据采集：</p><p>服务数据采集主要包括对服务运行过程产生的日志、指标和链路信息的数据采集，采集后根据设置的规则存储一段时间供用户查询和数据挖掘。通过对目前主流的可观测工具Prometheus、Elasticsearch和Skywalking进行封装整合，兼容OpenTelementry规范，提供接口规范给服务提供者，提供接口给服务使用者和平台管理员；集群数据采集主要包括对服务网络依托的服务器或集群的运行数据进行采集和存储。</p><h3 id="3-2-可视化功能"><a href="#3-2-可视化功能" class="headerlink" title="3.2 可视化功能"></a>3.2 可视化功能</h3><p>可视化能力是面向所有服务网络参与者的，是对采集到的数据可视化呈现给参与者的能力。服务消费者选择要使用的服务，然后可以使用服务网络提供的封装指标或使用原生指标自己封装指标，再通过可视化图表显示出来，方便监控自己使用的服务状态；服务提供者则可以实时监视自己的服务使用量以及部署服务的服务器或集群的状态；平台管理员可以看到整个网络的服务状态，以及承载网络的集群的存储、CPU、内存、网络流量等负载指标的可视化图表。</p><h3 id="3-3-告警提醒功能"><a href="#3-3-告警提醒功能" class="headerlink" title="3.3 告警提醒功能"></a>3.3 告警提醒功能</h3><p>分为对服务的告警和对集群的告警。服务数据采集可以采集到服务的各项数据，通过设置告警规则，可以在触发规则时提醒对应服务网络参与者。对集群设置告警也同理。</p><h3 id="3-4-故障检测与分析功能"><a href="#3-4-故障检测与分析功能" class="headerlink" title="3.4 故障检测与分析功能"></a>3.4 故障检测与分析功能</h3><p>基于统计模型和机器学习的方法，检测服务和集群的各指标是否存在异常，如果存在可以通过链路追踪能力辅助分析故障的原因。</p><h2 id="4-需求在整体系统功能图中所处的位置"><a href="#4-需求在整体系统功能图中所处的位置" class="headerlink" title="4.需求在整体系统功能图中所处的位置"></a>4.需求在整体系统功能图中所处的位置</h2><blockquote><p>基于功能图的示意图，细化到模块粒度</p></blockquote><img src="/images/snos-observability/image-20221113161743727.png" alt="image-20221113161743727" style="zoom:67%;" /><h2 id="5-需求在整体系统架构图中所处的位置"><a href="#5-需求在整体系统架构图中所处的位置" class="headerlink" title="5.需求在整体系统架构图中所处的位置"></a>5.需求在整体系统架构图中所处的位置</h2><blockquote><p>基于架构图的示意图，细化到模块粒度</p></blockquote><img src="/images/snos-observability/架构图.png" alt="架构图" style="zoom: 67%;" /><h2 id="6-需求在整体业务流程中所承载的流程"><a href="#6-需求在整体业务流程中所承载的流程" class="headerlink" title="6.需求在整体业务流程中所承载的流程"></a>6.需求在整体业务流程中所承载的流程</h2><blockquote><p>基于流程图的示意图，细化到模块粒度</p></blockquote><p><img src="/images/snos-observability/image-20221118221147874.png" alt="image-20221118221147874"></p><h2 id="7-需求对外暴露的接口能力描述"><a href="#7-需求对外暴露的接口能力描述" class="headerlink" title="7.需求对外暴露的接口能力描述"></a>7.需求对外暴露的接口能力描述</h2><blockquote><p>不是直接把API写出来，而是写你这个API要实现的功能是哪些，言简意赅</p></blockquote><h3 id="7-1-原始数据查询接口"><a href="#7-1-原始数据查询接口" class="headerlink" title="7.1 原始数据查询接口"></a>7.1 原始数据查询接口</h3><p>面向所有服务网络参与者，查询可以根据标签进行筛选。原始数据指服务网络监控系统原生支持的指标数据，包括服务的原始数据和集群的原始数据。服务消费者可以查询自己正在使用的服务的部分原始数据信息。服务发布者可以查询自己正在提供的服务的所有原始数据信息，平台管理员可以查看服务网络上所有的服务的部分原始数据和网络集群的所有原始数据信息。</p><h3 id="7-2-统计数据查询接口"><a href="#7-2-统计数据查询接口" class="headerlink" title="7.2 统计数据查询接口"></a>7.2 统计数据查询接口</h3><p>面向服务发布者和服务消费者。服务发布者可以自定义一些服务指标，然后通过此接口查询，并且可以通过此接口向服务消费者暴露一些自定义的服务指标。</p><h3 id="7-3-服务日志查询接口"><a href="#7-3-服务日志查询接口" class="headerlink" title="7.3 服务日志查询接口"></a>7.3 服务日志查询接口</h3><p>面向服务提供者、服务消费者。服务提供者、服务消费者可以查询服务运行期间产生的日志。</p><h3 id="7-4-告警接口"><a href="#7-4-告警接口" class="headerlink" title="7.4 告警接口"></a>7.4 告警接口</h3><p>面向所有服务网络参与者。可以对于服务或集群的告警规进行增删改查，触发规则时会告警通知相应参与者。可以查看已经触发的告警。</p><h3 id="7-5-异常预测结果查询接口"><a href="#7-5-异常预测结果查询接口" class="headerlink" title="7.5 异常预测结果查询接口"></a>7.5 异常预测结果查询接口</h3><p>面向服务提供者、服务消费者。系统会记录服务一段时间的运行数据，进行数据挖掘、模式识别，当检测到与规律不符的运行状态信息时会预测出现了异常。</p><h2 id="8-需求的模块组成及介绍"><a href="#8-需求的模块组成及介绍" class="headerlink" title="8.需求的模块组成及介绍"></a>8.需求的模块组成及介绍</h2><blockquote><p>模块1的功能描述，输⼊、输出、处理逻辑、与其他模块的交互逻辑、处于系统中的逻辑位置、处于部署系统中的物理位置</p></blockquote><h3 id="8-1-数据采集模块"><a href="#8-1-数据采集模块" class="headerlink" title="8.1 数据采集模块"></a>8.1 数据采集模块</h3><p><strong>功能描述</strong></p><ul><li>对服务数据进行采集存储</li><li>对集群信息进行采集存储</li><li>将采集到的数据可视化，方便实时监控</li></ul><p><strong>输入</strong></p><p><strong>输出</strong></p><p><strong>处理逻辑</strong></p><p><strong>交互逻辑</strong></p><p><strong>处于系统中的逻辑位置</strong></p><p><strong>处于部署系统中的物理位置</strong></p><h3 id="8-2-可视化模块"><a href="#8-2-可视化模块" class="headerlink" title="8.2 可视化模块"></a>8.2 可视化模块</h3><p><strong>功能描述</strong></p><ul><li>对服务数据进行采集存储</li><li>对集群信息进行采集存储</li><li>将采集到的数据可视化，方便实时监控</li></ul><p><strong>输入</strong></p><p><strong>输出</strong></p><p><strong>处理逻辑</strong></p><p><strong>交互逻辑</strong></p><p><strong>处于系统中的逻辑位置</strong></p><p><strong>处于部署系统中的物理位置</strong></p><h3 id="8-3-告警提醒模块"><a href="#8-3-告警提醒模块" class="headerlink" title="8.3 告警提醒模块"></a>8.3 告警提醒模块</h3><p><strong>功能描述</strong></p><p>触发规则时提醒对应服务网络参与者</p><p><strong>输入</strong></p><p><strong>输出</strong></p><p><strong>处理逻辑</strong></p><p><strong>交互逻辑</strong></p><p><strong>处于系统中的逻辑位置</strong></p><p><strong>处于部署系统中的物理位置</strong></p><h3 id="8-4-故障检测与分析模块"><a href="#8-4-故障检测与分析模块" class="headerlink" title="8.4 故障检测与分析模块"></a>8.4 故障检测与分析模块</h3><p><strong>功能描述</strong></p><p>检测服务和集群的各指标是否存在异常</p><p><strong>输入</strong></p><p><strong>输出</strong></p><p><strong>处理逻辑</strong></p><p><strong>交互逻辑</strong></p><p><strong>处于系统中的逻辑位置</strong></p><p><strong>处于部署系统中的物理位置</strong></p><h2 id="9-需求模块涉及到的新增数据结构和对已有数据结构的改动"><a href="#9-需求模块涉及到的新增数据结构和对已有数据结构的改动" class="headerlink" title="9.需求模块涉及到的新增数据结构和对已有数据结构的改动"></a>9.需求模块涉及到的新增数据结构和对已有数据结构的改动</h2><h2 id="10-需求模块涉及到的新增数据结构和对已有数据结构的改动"><a href="#10-需求模块涉及到的新增数据结构和对已有数据结构的改动" class="headerlink" title="10.需求模块涉及到的新增数据结构和对已有数据结构的改动"></a>10.需求模块涉及到的新增数据结构和对已有数据结构的改动</h2><h2 id="11-需求的UCD设计"><a href="#11-需求的UCD设计" class="headerlink" title="11.需求的UCD设计"></a>11.需求的UCD设计</h2><h2 id="12-需求的参与者与开发进度规划"><a href="#12-需求的参与者与开发进度规划" class="headerlink" title="12.需求的参与者与开发进度规划"></a>12.需求的参与者与开发进度规划</h2><p>参与者：陈宸，程立业</p>]]></content>
    
    
    <categories>
      
      <category>概要设计</category>
      
    </categories>
    
    
    <tags>
      
      <tag>概要设计</tag>
      
      <tag>可观测</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>概要设计-区块链</title>
    <link href="/2022/12/05/%E6%A6%82%E8%A6%81%E8%AE%BE%E8%AE%A1-%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    <url>/2022/12/05/%E6%A6%82%E8%A6%81%E8%AE%BE%E8%AE%A1-%E5%8C%BA%E5%9D%97%E9%93%BE/</url>
    
    <content type="html"><![CDATA[<h1 id="概要设计-区块链"><a href="#概要设计-区块链" class="headerlink" title="概要设计 - 区块链"></a>概要设计 - 区块链</h1><h2 id="需求背景"><a href="#需求背景" class="headerlink" title="需求背景"></a>需求背景</h2><blockquote><p>讲清楚为什么要做这个需求（不要写因为老师安排你做了这个需求所以你做这个需求，而是结合你的调研情况，讲清楚在什么样的产业需求情况，引发了老师安排你做或者你主动规划做这个需求）</p></blockquote><ol><li><p><strong>传统服务交互问题</strong></p><ol><li><p>服务实体可信度保障机制不完善</p><p>服务交互中涉及的主要实体有服务、服务提供者和服务使用者。</p><p>服务本身的QoS和输出结果无法保证可信：一方面服务无法保证在延迟、响应成功率等QoS指标满足声称的SLA；另一方面服务执行过程对用户而言是一个黑箱，无法保证输出结果完全正确，符合服务使用者需求。</p><p>服务提供者的可信主要体现在其提供的服务是否可信。首先服务本身可信缺失，其次同一服务提供者的多个服务之间以及不同服务提供者之间相对独立，服务使用者无法对其进行较为全面地信任分析与决策。</p><p>服务使用者的可信主要体现在其在使用服务时不存在恶意行为，例如欠费和DDoS攻击等。目前各平台间并没有统一的判定标准，且由于平台间相互独立，某恶意用户在被A平台判定为恶意后其他平台无法感知。</p></li><li><p>服务实体间数据交互可信保障机制不完善</p><p>数据可能丢失：传统的数据存储和安全系统高度集中，这意味着存在单点故障。也就是对中央服务器的任何外部攻击，如恶意软件或暴力破解尝试，都可能导致存储数据的部分或全部丢失。根据存储在系统中的数据类型，数据丢失的后果可能对企业甚至经济造成毁灭性的影响。现有的服务网络仍然依托于现有的传统数据库，没有对服务共享，服务数据调用过程中的数据加以保护，不满足用户对于信息完整性的需求；因此需要新的架构来实现对信息完整性的保护。</p><p>数据可能被篡改：服务的种类多种多样，在金融领域，数字版权领域，公益领域等，诸如此类需要多方参与，多方认证的数据，由于经过的机构复杂，认证过程复杂，并且一些核心的数据需要保证数据不可更改。在服务共享领域，服务提供方有权要求在共享的服务数据使用过程中不被篡改，对于防篡改的特性，现有的传输方式，只能通过严格的认证方式感知数据是否被篡改，而不能保证不出现篡改的结果。</p></li><li><p>现有BaaS和服务网络结合存在鸿沟，使用成本较高</p><p>由于区块链和智能合约需要用户自定义，自定义区块链和智能合约所以需要的成本比较高，实现服务数据之间的可信交互成本提高，目前没有一个针对服务交互场景下适用的智能合约，是可信交互难以广泛推广的瓶颈之处。</p></li></ol></li><li><p><strong>传统服务交易问题</strong></p><ol><li><p>结算模式无法保障服务使用者权益</p><p>传统服务交易结算对服务实际运行质量缺乏全面考量，也缺乏灵活性，无法满足使用者个性化的QoS需求和跨供应商的服务自主选择权。以<a href="https://help.aliyun.com/document_detail/56773.html">阿里云</a>、<a href="https://www.huaweicloud.com/declaration/sla.html">华为云</a>和<a href="https://www.amazonaws.cn/legal/sla/">AWS</a>为例，其SLA只对服务可用性做了一定保证，而没有考虑延迟、吞吐量等指标；如果未满足SLA，它们采取事后补偿的方式返还服务使用者一定比例的金额，补偿依据的只是服务提供者单方面的监控指标，且这些金额是供应商绑定的（即退款只能用于使用同一服务提供者的服务）。</p></li><li><p>简化交易流程</p><p>对于服务请求方来说，服务请求方希望与服务提供方以一种简单便捷的方式来实现服务请求与调用的双方认证与消费，传统的服务交易的安全性取决于第三方的支付平台，依赖性强。如果可以省略第三方，会极大简化交易流程，给交易双方带来便捷。</p></li><li><p>减小交易风险</p><p>第三方支付企业在数据安全方面，一向采用的是数据中心的支付方式，所有信息被统一存在中心数据库，可能存在黑客或者其他人员篡改数据库的情况，因为大型数据中心所存留的数据量很庞大，一旦被篡改，所造成的后果不可估量。</p></li></ol></li><li><p><strong>区块链性能问题</strong></p><p>服务网络场景下存在海量异构服务和众多服务提供者以及使用者，使用区块链存储关键数据实现服务可信交互与交易固然能够保障数据安全性，提升交易交互流程便捷性；但该场景下节点数量规模大会产生频繁的区块链交易请求以及大量需要写入区块链的数据，这对区块链本身的TPS和可扩展性提出了很高的要求，现有的区块链应用并不能很好地解决上述性能问题。</p></li></ol><h2 id="需求价值"><a href="#需求价值" class="headerlink" title="需求价值"></a>需求价值</h2><blockquote><p>讲清楚这个需求做了之后，前面的需求背景中提到的当前业界面临的哪些痛点问题就可以解决掉了。</p></blockquote><ol><li><p><strong>服务交互数据安全、实体可信、使用便捷</strong></p><p>区块链的去中心化结构能够保证区块链上的所有节点维护相同的数据，意味着，只要区块链上有一个节点是稳定运行的，区块链上的数据就不会丢失，能够完整保存，保证了区块链上的数据是相对安全的。如果要修改区块链中的信息，必须征得半数以上节点的同意并修改所有节点中的信息，而这些节点通常掌握在不同的主体手中，因此篡改区块链中的信息是一件极其困难的事。通过使用区块链作为传输的中间节点，使得数据交互双方能够通过区块链中的节点来验证传输前后的数据是否被更改，严格保证交互数据的安全性和防篡改。</p><p>通过服务QoS以及用户评价上链，在此基础上对服务和用户进行信任建模，可以一定程度上保证服务交互过程中多方实体的可信。</p><p>通过将服务交互流程以智能合约的形式上链，提供给用户serverless式的无感区块链服务，可以最大限度降低用户使用区块链的成本。</p></li><li><p><strong>服务交易安全可靠、流程简化</strong></p><p>有关服务交易的相关信息是比较重要的信息，所以服务交易相关的信息会存储到区块链中，通过服务交易信息上链的方式，可以实现交易记录安全存储，不可篡改且可以溯源；通过将服务交易流程写入智能合约，可以实现服务QoS智能感知的服务自动交易，极大简化了交易流程；通过将服务可信交互过程以智能合约实现以及将用户调用的服务自组织为区块链，可以实现自动化的区块链部署和服务间传输数据上链，免去了用户运维区块链和开发智能合约的负担，使得开发和部署变得简单易用。</p></li><li><p><strong>服务区块链TPS高、可扩展性好</strong></p><p>向区块链中写入数据代价高，耗时长；大规模可信服务网络平台通过建立父链-子链的双层区块链架构，将元数据写入子链，将整合后的元数据打包写入父链，使得写入的过程更加高效；当服务数量增多，服务数据需要高频、大量写入的时候，可以突破大规模场景下区块链的效率瓶颈。</p></li></ol><h2 id="需求功能描述"><a href="#需求功能描述" class="headerlink" title="需求功能描述"></a>需求功能描述</h2><blockquote><p>讲清楚你的这个需求，做完之后，具体实现了那几条功能，注意这个和第二点需求价值的区别，需求价值是讲你通过这个需求实现，解决了哪些痛点问题，而需求功能描述是指具体到软件工程语言的，你所实现的基本功能条目，言简意赅、精准描述。</p></blockquote><ol><li><p><strong>节点管理功能</strong></p><p>子链：区块链节点为服务消费者调用的服务，多个服务以应用为粒度组成一条子链（若应用调用服务数量太少则按照子链节点自组织规则合并加入已有子链），存储服务间传输数据（实现服务间可信交互）以及服务QoS（实现服务消费者与服务间可信交互）和每次调用产生的费用（为父链实现服务交易做准备）。应用交互网络</p><p>父链：区块链节点为服务消费者和服务发布者，存储服务QoS、服务评价（摘要）（实现服务消费者与服务间可信交互）和实际转账记录（实现服务交易）。服务网络交易网络</p><ol><li><p>支持节点的加入与退出</p><p>新用户注册：父链节点加入</p><p>用户注销：父链节点退出</p><p>发布应用：使用的服务按照子链节点自组织规则创建新子链或加入已有子链</p><p>应用更新（涉及调用服务变更）：不再使用的服务退出子链，新使用的服务加入应用所在子链</p><p>应用下线：如果应用所在子链只包含自身，则销毁子链，否则子链中该应用使用的服务退出子链</p></li><li><p>子链节点自组织</p><p>设定子链节点数下限$N$（保证安全性）。</p><p>新应用发布时如果该应用使用服务数量$\ge N$则创建为新子链，否则从当前系统中所有子链中吞吐量较低和节点数较少的当中选择一个加入。</p><p>应用更新时如果当前子链节点数$&lt;N$则整条子链销毁，在保留必要原有数据的情况下从当前系统中所有子链中吞吐量较低和节点数较少的当中选择一个加入。</p><p>应用下线时如果当前子链节点数$&lt;N$则当前子链销毁，在保留必要原有数据的情况下从当前系统中所有子链中吞吐量较低和节点数较少的当中选择一个加入。</p></li></ol></li><li><p><strong>持久存储功能</strong></p><ol><li>单条交易记录存储</li><li>时间段内交易记录存储</li><li>用户余额存储</li><li>用户评价存储</li><li>QoS存储</li></ol></li><li><p><strong>非持久存储功能</strong></p><ol><li>交互数据（摘要）快速存储</li><li>网络数据与区块链数据快速比对</li><li>无用数据标记及删除</li></ol></li><li><p><strong>交易机制设计功能</strong></p><ol><li>QoS获取</li><li>交易规则设计</li><li>服务实际价格计算</li></ol></li><li><p><strong>可信评估功能</strong></p><ol><li>用户和服务的信任模型构建</li><li>信任模型更新</li></ol></li></ol><h2 id="需求在整体系统功能图中所处的位置"><a href="#需求在整体系统功能图中所处的位置" class="headerlink" title="需求在整体系统功能图中所处的位置"></a>需求在整体系统功能图中所处的位置</h2><blockquote><p>基于功能图的示意图，细化到模块粒度</p></blockquote><p><img src="/images/%E6%A6%82%E8%A6%81%E8%AE%BE%E8%AE%A1-%E5%8C%BA%E5%9D%97%E9%93%BE/functions.png" alt="功能图"></p><h2 id="需求在整体系统架构图中所处的位置"><a href="#需求在整体系统架构图中所处的位置" class="headerlink" title="需求在整体系统架构图中所处的位置"></a>需求在整体系统架构图中所处的位置</h2><blockquote><p>基于架构图的示意图，细化到模块粒度</p></blockquote><p><img src="/images/%E6%A6%82%E8%A6%81%E8%AE%BE%E8%AE%A1-%E5%8C%BA%E5%9D%97%E9%93%BE/architecture.png" alt="架构图"></p><h2 id="需求在整体业务流程中所承载的流程"><a href="#需求在整体业务流程中所承载的流程" class="headerlink" title="需求在整体业务流程中所承载的流程"></a><strong>需求在整体业务流程中所承载的流程</strong></h2><blockquote><p>基于流程图的示意图，细化到模块粒度</p></blockquote><p><img src="/images/%E6%A6%82%E8%A6%81%E8%AE%BE%E8%AE%A1-%E5%8C%BA%E5%9D%97%E9%93%BE/process-legend.png" alt="流程图图例"></p><ol><li><p>服务可信交互与交易流程</p><p><img src="/images/%E6%A6%82%E8%A6%81%E8%AE%BE%E8%AE%A1-%E5%8C%BA%E5%9D%97%E9%93%BE/process-interaction-transaction.png" alt="可信交互与交易流程"></p><p>服务调用完成后：</p><ol><li>服务观测模块调用服务所在节点子链的智能合约t1，输入参数为（时间，服务ID，服务提供者ID，服务调用者ID，SLA，QoS，预计费用）</li><li>智能合约t1计算出实际费用，将本次交易记录（时间，服务ID，服务提供者ID，服务调用者ID，SLA，QoS，预计费用，实际费用）写入子链</li><li>子链的智能合约t2定期将这段时间内的服务交易记录压缩（相同服务ID，服务提供者ID，服务调用者ID的交易记录压缩为一条），调用父链的智能合约T，输入参数为压缩后的交易记录      </li><li>父链智能合约T将每条压缩后的交易记录写入父链（时间，服务ID，服务提供者ID，服务调用者ID，调用时间段，SLA，平均QoS，预计费用，实际费用），并由服务调用者向服务提供者发起转账</li></ol></li><li><p>节点管理流程</p><p><img src="/images/%E6%A6%82%E8%A6%81%E8%AE%BE%E8%AE%A1-%E5%8C%BA%E5%9D%97%E9%93%BE/process-node-management.png" alt="节点管理流程"></p><ul><li><p>子链重组</p><p>服务下线/应用变更调用服务/应用下线/用户注销时，若对应节点退出子链后子链剩余节点数$&lt;N$，则子链首先将链上必要数据保存，然后销毁子链，从服务网络其他子链中选择吞吐量较低且节点数较少的一条（最优子链）加入。</p></li><li><p>交易结算</p><p>即服务交易流程中到达汇总时间后的三个步骤：压缩子链交易记录（对用户结算，压缩该用户ID的所有交易；对服务结算，压缩该服务ID的所有交易），父链写入压缩记录，发起转账。需要注意的是，如果此时还有与用户或服务相关的SCD和SRD未确认，需要等到确认后才能开始结算。</p></li></ul></li></ol><h2 id="需求对外部暴露的接口能力描述"><a href="#需求对外部暴露的接口能力描述" class="headerlink" title="需求对外部暴露的接口能力描述"></a><strong>需求对外部暴露的接口能力描述</strong></h2><blockquote><p>不是直接把API写出来，而是写你这个API要实现的功能是哪些，言简意赅</p></blockquote><p>服务提供方，服务使用方，管理员</p><h3 id="服务提供方身份"><a href="#服务提供方身份" class="headerlink" title="服务提供方身份"></a>服务提供方身份</h3><ol><li>父链节点加入：用户注册时调用，新用户作为新的父链节点加入交易网络</li><li>父链节点退出：用户注销时调用，注销用户的父链节点退出交易网络</li><li>发布应用：指定应用调用的服务，按照子链自组织规则创建子链或加入已有子链</li><li>更新应用：指定应用更新后不再使用的服务和新使用的服务，按照子链自组织规则重新组织子链</li><li>下线应用：销毁子链，按照子链自组织规则重新组织子链</li></ol><h3 id="服务使用方身份"><a href="#服务使用方身份" class="headerlink" title="服务使用方身份"></a>服务使用方身份</h3><ol><li>父链节点加入：用户注册时调用，新用户作为新的父链节点加入交易网络</li><li>父链节点退出：用户注销时调用，注销用户的父链节点退出交易网络</li><li>发表评价：发表对用户或服务的评价</li><li>查询评价：查询用户或服务的评价</li></ol><h3 id="管理员身份"><a href="#管理员身份" class="headerlink" title="管理员身份"></a>管理员身份</h3><ol><li>交易记录获取：查询用户交易记录及其收费依据（QoS）</li><li>恶意评价警告：系统检测到用户存在恶意评价时会警告用户</li><li>不可信交互警告：子链检测到服务传输数据不一致时会警告用户</li><li>余额不足警告：服务收到用户调用请求时如果用户余额不足会警告用户</li><li>非持久存储删除规则自定义：用户指定非持久存储中哪些数据被标记为无用以及间隔多久会被永久删除</li></ol><h2 id="需求的模块组成及介绍"><a href="#需求的模块组成及介绍" class="headerlink" title="需求的模块组成及介绍*"></a><strong>需求的模块组成及介绍</strong>*</h2><blockquote><p>模块x的功能描述，输入、输出、处理逻辑、与其他模块的交互逻辑、处于系统中的逻辑位置、处于部署系统中的物理位置</p></blockquote><p><img src="/images/%E6%A6%82%E8%A6%81%E8%AE%BE%E8%AE%A1-%E5%8C%BA%E5%9D%97%E9%93%BE/module.png" alt="模块示意"></p><h2 id="需求模块涉及到的新增数据结构和对已有数据结构的改动"><a href="#需求模块涉及到的新增数据结构和对已有数据结构的改动" class="headerlink" title="需求模块涉及到的新增数据结构和对已有数据结构的改动*"></a><strong>需求模块涉及到的新增数据结构和对已有数据结构的改动</strong>*</h2><blockquote><p>列出核心的数据结构，包括表结构的设计，在缓存中的存储格式等</p></blockquote><h2 id="需求涉及模块的部署形态"><a href="#需求涉及模块的部署形态" class="headerlink" title="需求涉及模块的部署形态*"></a><strong>需求涉及模块的部署形态</strong>*</h2><blockquote><p>如果涉及到独立部署的，增加这块的解释，如果不涉及到独立部署，描述清楚和哪个部署单元一起部署即可</p></blockquote><h2 id="需求的UCD设计"><a href="#需求的UCD设计" class="headerlink" title="需求的UCD设计"></a><strong>需求的UCD设计</strong></h2><blockquote><p>列出来相关模块的前端界面呈现模式，统一基于sketch框架来画</p></blockquote><h2 id="需求的参与者与开发进度规划"><a href="#需求的参与者与开发进度规划" class="headerlink" title="需求的参与者与开发进度规划"></a><strong>需求的参与者与开发进度规划</strong></h2><p>参与者：罗嘉胤 庞盛业 于书懿</p>]]></content>
    
    
    <categories>
      
      <category>概要设计</category>
      
    </categories>
    
    
    <tags>
      
      <tag>概要设计</tag>
      
      <tag>区块链</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
